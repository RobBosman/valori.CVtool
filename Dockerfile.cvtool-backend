FROM node:current-alpine as frontend-builder
COPY frontend/*.* /frontend/
COPY frontend/src /frontend/src
WORKDIR /frontend
RUN npm install --no-optional --no-audit
RUN npm run-script build


FROM openjdk:15-alpine as backend-builder
RUN apk add binutils  # for objcopy, needed by jlink
ENV MAVEN_VERSION 3.6.3
ENV MAVEN_HOME /usr/lib/mvn
ENV PATH $MAVEN_HOME/bin:$PATH
RUN wget http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \
  && tar -zxvf apache-maven-$MAVEN_VERSION-bin.tar.gz \
  && rm apache-maven-$MAVEN_VERSION-bin.tar.gz \
  && mv apache-maven-$MAVEN_VERSION $MAVEN_HOME

COPY --from=frontend-builder frontend/dist /frontend/dist
RUN jar cf frontend.war /frontend/dist
RUN mvn install:install-file \
  -Dfile=frontend.war \
  -DgroupId=nl.valori.cvtool \
  -DartifactId=frontend \
  -Dversion=0.0.1-SNAPSHOT \
  -Dpackaging=war

COPY pom.xml .
COPY backend/pom.xml backend/
COPY backend/src backend/src
WORKDIR /backend
RUN mvn package \
  && mv target/*-fat.jar /fat.jar

RUN jdeps --print-module-deps --ignore-missing-deps /fat.jar > java.modules
RUN jlink --strip-debug --add-modules $(cat java.modules) --output /java/


FROM alpine
COPY --from=backend-builder /java /java
COPY --from=backend-builder /fat.jar /fat.jar
CMD exec /java/bin/java \
  --add-opens java.base/jdk.internal.misc=ALL-UNNAMED -Dio.netty.tryReflectionSetAccessible=true \
  -jar /fat.jar
