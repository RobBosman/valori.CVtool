version: "3.4"

volumes:
  mongodb:
  mongodb_backup:
  mongodb_config:
  cvtool_backup:
  webroot:
  ssl_certs:
  letsencrypt_logs:
  letsencrypt_var:

services:

  mongodb:
    image: mongo:4.4
    # WARNING: MongoDB 5.0+ requires a CPU with AVX support, and your current system does not appear to have that!
    #  see https://www.mongodb.com/community/forums/t/mongodb-5-0-cpu-intel-g4650-compatibility/116610/2
    #  see also https://github.com/docker-library/mongo/issues/485#issuecomment-891991814
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - type: volume
        source: mongodb
        target: /data/db
      - type: volume
        source: mongodb_backup
        target: /backup
      - type: volume
        source: mongodb_config
        target: /data/configdb
    healthcheck:
      test: echo 'curl --connect-timeout 10 --silent --show-error http://localhost:${MONGO_PORT}/' | grep "It looks like you are trying to access MongoDB over HTTP on the native driver port."
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s

  cvtool-backend:
    image: bransom/cvtool-backend
    depends_on:
      - mongodb
    restart: always
    environment:
      - CONTROL_CONNECTION_STRING=http://localhost:${CONTROL_PORT}/
      - HTTP_CONNECTION_STRING=http://${HTTP_HOST}:${HTTP_PORT}/
      - AUTH_CONNECTION_STRING=https://login.microsoftonline.com/${OAUTH_TENANT_ID}/v2.0?${OAUTH_CLIENT_ID}:${OAUTH_CLIENT_SECRET}
      - MONGO_CONNECTION_STRING=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/cvtool?authSource=admin
    volumes:
      - type: volume
        source: cvtool_backup
        target: /backup
    healthcheck:
      test: echo 'wget -q -O - http://${HTTP_HOST}:${HTTP_PORT}/health' | grep '"outcome":"UP"'
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s

  cvtool-frontend:
    image: bransom/cvtool-frontend
    depends_on:
      - cvtool-backend
    restart: always
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
      - ${HTTPS_PORT}:${HTTPS_PORT}
    volumes:
      - type: volume
        source: ssl_certs
        target: /ssl_certs
        read_only: true
      - type: volume
        source: webroot
        target: /webroot
        read_only: true
#    healthcheck:
#      test: echo 'wget -q -O - http://${HTTP_HOST}:${HTTP_PORT}/health' | grep '"outcome":"UP"'
#      interval: 5s
#      timeout: 5s
#      retries: 3
#      start_period: 10s

#  nginx:
#    container_name: nginx
#    image: nginx:stable
#    restart: always
#    volumes:
#      - type: volume
#        source: ssl_certs
#        target: /ssl_certs
#        read_only: true
#      - type: volume
#        source: webroot
#        target: /webroot
#        read_only: true
#      - type: volume
#        source: ./nginx/config/nginx.conf
#        target: /etc/nginx/nginx.conf
#      - type: volume
#        source: ./nginx/config/conf.d/local
#        target: /etc/nginx/conf.d
#      - type: volume
#        source: /tmp/logs/nginx
#        target: /var/log/nginx
#      - type: volume
#        source: ./nginx/html
#        target: /var/www/public/content
#    ports:
#      - 80:80
#      - 443:443

  letsencrypt:
    image: certbot/certbot
    depends_on:
      - cvtool
    volumes:
      - type: volume
        source: ssl_certs
        target: /etc/letsencrypt
      - type: volume
        source: webroot
        target: /data/letsencrypt
      - type: volume
        source: letsencrypt_logs
        target: /var/log/letsencrypt
      - type: volume
        source: letsencrypt_var
        target: /var/lib/letsencrypt
    command: certonly --webroot --webroot-path=/data/letsencrypt --register-unsafely-without-email --agree-tos --quiet -d ${HTTP_HOST}
