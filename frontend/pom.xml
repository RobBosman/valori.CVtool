<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>nl.valori.cvtool</groupId>
    <artifactId>root</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>frontend</artifactId>
  <packaging>war</packaging>
  <description>Frontend of CVtool-app to enter and maintain cv's (curricula vitae)</description>

  <properties>
    <target.environment>PROD</target.environment>
    <dependency-check-maven.version>6.0.2</dependency-check-maven.version>
    <frontend-maven-plugin.version>1.10.3</frontend-maven-plugin.version>
    <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
    <maven-war-plugin.version>3.3.1</maven-war-plugin.version>
    <nodejs.version>v14.13.1</nodejs.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>coverage</directory>
            </fileset>
            <fileset>
              <directory>dist</directory>
            </fileset>
            <fileset>
              <directory>node</directory>
            </fileset>
            <fileset>
              <directory>node_modules</directory>
            </fileset>
            <fileset>
              <directory>.</directory>
              <includes>
                <include>npm-*.txt</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check-maven.version}</version>
        <configuration>
          <scanSet>
            <fileSet>
              <directory>src</directory>
            </fileSet>
            <fileSet>
              <directory>dist</directory>
            </fileSet>
          </scanSet>
          <format>ALL</format>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${frontend-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>install-node-and-npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <nodeVersion>${nodejs.version}</nodeVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>install --no-optional --no-audit</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm lint</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run-script lint</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm test</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run-script test:coverage</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm build</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run-script build:prod</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm outdated</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run-script npm-outdated</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm audit</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run-script npm-audit</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <webResources>
            <resource>
              <directory>dist</directory>
              <!-- Make sure the <targetPath> is set to the relative path in the file system.
              This way the backend can find the frontend code either on the classpath (when running standalone)
              or in the file system (while debugging). -->
              <targetPath>frontend/dist</targetPath>
            </resource>
          </webResources>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>